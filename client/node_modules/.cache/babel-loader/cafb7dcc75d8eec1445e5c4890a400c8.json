{"ast":null,"code":"var _jsxFileName = \"/Users/sanjidanawrin/Project-3/client/src/components/LoginForm/index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errorUsername: \"\",\n      errorPassword: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.username && this.state.password) {\n        fetch(\"/auth/login\", {\n          method: \"POST\",\n          credentials: \"include\",\n          mode: \"cors\",\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n          }),\n          headers: new Headers({\n            \"Content-Type\": \"application/json\"\n          })\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          this.props.login().then(() => {\n            global.$(\"#loginModal\").modal(\"hide\");\n            this.props.history.push('/profile');\n          });\n        }).catch(err => {\n          this.setState({\n            errorUsername: \"\",\n            errorPassword: \"Incorrect Username or Password. Please try again.\"\n          });\n        });\n        this.setState({\n          username: \"\",\n          password: \"\",\n          errorUsername: \"\",\n          errorPassword: \"\"\n        });\n      } else {\n        this.setState({\n          errorUsername: \"*Please fill out your username\",\n          errorPassword: \"*Please fill out your password\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      autocomplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.username,\n      name: \"username\",\n      onChange: this.handleInputChange,\n      type: \"text\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.errorUsername)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.password,\n      name: \"password\",\n      onChange: this.handleInputChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: \"red\",\n        fontSize: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.errorPassword)), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleFormSubmit,\n      className: \"btn btn-primary w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Log In\"));\n  }\n\n}\n\n;\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/sanjidanawrin/Project-3/client/src/components/LoginForm/index.js"],"names":["React","Component","withRouter","LoginForm","state","username","password","errorUsername","errorPassword","handleInputChange","event","name","value","target","setState","handleFormSubmit","preventDefault","fetch","method","credentials","mode","body","JSON","stringify","headers","Headers","then","response","ok","Error","statusText","props","login","global","$","modal","history","push","catch","err","render","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BG,KAD8B,GACtB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,aAAa,EAAE,EAHX;AAIJC,MAAAA,aAAa,EAAE;AAJX,KADsB;;AAAA,SAQ9BC,iBAR8B,GAQVC,KAAK,IAAI;AACzB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc;AACV,SAACH,IAAD,GAAQC;AADE,OAAd;AAGH,KAb6B;;AAAA,SAe9BG,gBAf8B,GAeXL,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACM,cAAN;;AACA,UAAI,KAAKZ,KAAL,CAAWC,QAAX,IAAuB,KAAKD,KAAL,CAAWE,QAAtC,EAAgD;AAC5CW,QAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBC,UAAAA,MAAM,EAAE,MADS;AAEjBC,UAAAA,WAAW,EAAE,SAFI;AAGjBC,UAAAA,IAAI,EAAE,MAHW;AAIjBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBlB,YAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QADJ;AAEjBC,YAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFJ,WAAf,CAJW;AAQjBkB,UAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,4BAAgB;AADC,WAAZ;AARQ,SAAhB,CAAL,CAYKC,IAZL,CAYUC,QAAQ,IAAI;AACd,cAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,kBAAM,IAAIC,KAAJ,CAAUF,QAAQ,CAACG,UAAnB,CAAN;AACH;;AACD,eAAKC,KAAL,CAAWC,KAAX,GAAmBN,IAAnB,CAAwB,MAAM;AAC1BO,YAAAA,MAAM,CAACC,CAAP,CAAS,aAAT,EAAwBC,KAAxB,CAA8B,MAA9B;AACA,iBAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACH,WAHD;AAKH,SArBL,EAsBKC,KAtBL,CAsBWC,GAAG,IAAI;AACV,eAAKzB,QAAL,CAAc;AACVP,YAAAA,aAAa,EAAE,EADL;AAEVC,YAAAA,aAAa,EAAE;AAFL,WAAd;AAIH,SA3BL;AA6BA,aAAKM,QAAL,CAAc;AACVT,UAAAA,QAAQ,EAAE,EADA;AAEVC,UAAAA,QAAQ,EAAE,EAFA;AAGVC,UAAAA,aAAa,EAAE,EAHL;AAIVC,UAAAA,aAAa,EAAE;AAJL,SAAd;AAMH,OApCD,MAoCO;AACH,aAAKM,QAAL,CAAc;AACVP,UAAAA,aAAa,EAAE,gCADL;AAEVC,UAAAA,aAAa,EAAE;AAFL,SAAd;AAIH;AAEJ,KA5D6B;AAAA;;AA8D9BgC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,SAAS,EAAC,cAAjB;AACI,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWC,QADtB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,QAAQ,EAAE,KAAKI,iBAHnB;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAG,MAAA,KAAK,EAAE;AAAEgC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C,KAAKtC,KAAL,CAAWG,aAA1D,CATJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,MAAA,SAAS,EAAC,cAAjB;AACI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QADtB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,QAAQ,EAAE,KAAKG,iBAHnB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,WAAW,EAAC,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EASI;AAAG,MAAA,KAAK,EAAE;AAAEgC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C,KAAKtC,KAAL,CAAWI,aAA1D,CATJ,CAZJ,EAuBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKO,gBAApC;AACI,MAAA,SAAS,EAAC,uBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAvBJ,CADJ;AA8BH;;AA9F6B;;AA+FjC;AAED,eAAeb,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        errorUsername: \"\",\n        errorPassword: \"\"\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.username && this.state.password) {\n            fetch(\"/auth/login\", {\n                method: \"POST\",\n                credentials: \"include\",\n                mode: \"cors\",\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                }),\n                headers: new Headers({\n                    \"Content-Type\": \"application/json\"\n                })\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(response.statusText);\n                    }\n                    this.props.login().then(() => {\n                        global.$(\"#loginModal\").modal(\"hide\");\n                        this.props.history.push('/profile')\n                    })\n\n                })\n                .catch(err => {\n                    this.setState({\n                        errorUsername: \"\",\n                        errorPassword: \"Incorrect Username or Password. Please try again.\"\n                    })\n                });\n\n            this.setState({\n                username: \"\",\n                password: \"\",\n                errorUsername: \"\",\n                errorPassword: \"\"\n            });\n        } else {\n            this.setState({\n                errorUsername: \"*Please fill out your username\",\n                errorPassword: \"*Please fill out your password\"\n            })\n        }\n\n    };\n\n    render() {\n\n        return (\n            <form autocomplete=\"off\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input className=\"form-control\"\n                        value={this.state.username}\n                        name=\"username\"\n                        onChange={this.handleInputChange}\n                        type=\"text\"\n                        placeholder=\"Username\"\n                    />\n                    <p style={{ color: \"red\", fontSize: \"20px\" }}>{this.state.errorUsername}</p>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\"\n                        value={this.state.password}\n                        name=\"password\"\n                        onChange={this.handleInputChange}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                    <p style={{ color: \"red\", fontSize: \"20px\" }}>{this.state.errorPassword}</p>\n                </div>\n                <button type=\"button\" onClick={this.handleFormSubmit}\n                    className=\"btn btn-primary w-100\"\n                > Log In\n                </button>\n            </form>\n        )\n    }\n};\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}