{"ast":null,"code":"var _jsxFileName = \"/Users/sanjidanawrin/n3/client/src/components/RegisterForm/index.js\";\nimport React, { Component, createRef } from \"react\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\nclass CreateUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errorUsername: \"\",\n      errorPassword: \"\",\n      errorConfirm: \"\",\n      errorRequest: \"\"\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (!(this.state.username && this.state.password && this.state.passwordConfirm)) {\n        this.setState({\n          errorUsername: \"*Please fill out your username\",\n          errorPassword: \"*Please fill out your password\",\n          errorConfirm: \"*Please confirm your password\"\n        });\n      } else if (this.state.password.length < 6) {\n        this.setState({\n          errorUsername: \"\",\n          errorPassword: \"*Password should be at least 6 characters long\",\n          errorConfirm: \"\"\n        });\n      } else if (this.state.password !== this.state.passwordConfirm) {\n        this.setState({\n          errorUsername: \"\",\n          errorPassword: \"*Make sure your passwords match\",\n          errorConfirm: \"\"\n        }); // } else {console.log(this.state)\n        //    axios.post(\"/auth/signup\", {\n        //       password: this.state.password,\n        //       username: this.state.username\n        //    })\n\n        fetch(\"/auth/signup\", {\n          method: \"POST\",\n          credentials: \"include\",\n          mode: \"cors\",\n          body: JSON.stringify({\n            password: this.state.password,\n            username: this.state.username\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(response => {\n          if (!response.ok) {\n            response.text().then(body => {\n              this.setState({\n                errorRequest: body + \" Please enter different username.\"\n              });\n            });\n            return;\n          }\n\n          this.props.login().then(() => {\n            this.props.history.push('/profile');\n          });\n        }).catch(err => console.log(err));\n        this.setState({\n          username: \"\",\n          password: \"\",\n          passwordConfirm: \"\",\n          errorUsername: \"\",\n          errorPassword: \"\",\n          errorConfirm: \"\"\n        });\n      }\n    };\n\n    this.form = createRef();\n    console.log(this.props, props);\n  }\n\n  componentDidMount() {\n    this.form.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      ref: this.form,\n      autoComplete: \"off\",\n      className: \"p-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      name: \"username\",\n      placeholder: \"Username\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.errorUsername), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Password (at least 6 characters long)\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.errorPassword), React.createElement(\"label\", {\n      htmlFor: \"passwordConfirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.passwordConfirm,\n      onChange: this.handleInputChange,\n      name: \"passwordConfirm\",\n      placeholder: \"Confirm password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.errorConfirm)), React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.errorRequest), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Sign Up\"));\n  }\n\n}\n\n;\nexport default CreateUser;","map":{"version":3,"sources":["/Users/sanjidanawrin/n3/client/src/components/RegisterForm/index.js"],"names":["React","Component","createRef","axios","CreateUser","constructor","props","state","username","password","passwordConfirm","errorUsername","errorPassword","errorConfirm","errorRequest","handleInputChange","event","name","value","target","setState","handleFormSubmit","preventDefault","length","fetch","method","credentials","mode","body","JSON","stringify","headers","then","response","ok","text","login","history","push","catch","err","console","log","form","componentDidMount","current","scrollIntoView","behavior","render"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport \"./style.css\"\nimport axios from \"axios\";\n\nclass CreateUser extends Component {\nconstructor(props) {\n   super(props);\n   this.form = createRef();\n   console.log(this.props,props)\n}\n\n   state = {\n      username: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      errorUsername: \"\",\n      errorPassword: \"\",\n      errorConfirm: \"\",\n      errorRequest:\"\"\n   }\n\n   componentDidMount() {\n      this.form.current.scrollIntoView({ behavior: 'smooth' });\n   }\n\n   handleInputChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n         [name]: value\n      });\n   };\n\n   handleFormSubmit = event => {\n      event.preventDefault();\n      if (!(this.state.username && this.state.password && this.state.passwordConfirm)) {\n         this.setState({\n            errorUsername: \"*Please fill out your username\",\n            errorPassword: \"*Please fill out your password\",\n            errorConfirm: \"*Please confirm your password\"\n         });\n      } else if (this.state.password.length < 6) {\n         this.setState({\n            errorUsername: \"\",\n            errorPassword: \"*Password should be at least 6 characters long\",\n            errorConfirm: \"\"\n         });\n      } else if (this.state.password !== this.state.passwordConfirm) {\n         this.setState({\n            errorUsername: \"\",\n            errorPassword: \"*Make sure your passwords match\",\n            errorConfirm: \"\"\n         });\n      // } else {console.log(this.state)\n      //    axios.post(\"/auth/signup\", {\n      //       password: this.state.password,\n      //       username: this.state.username\n      //    })\n         fetch(\"/auth/signup\", {\n            method: \"POST\",\n            credentials: \"include\",\n            mode: \"cors\",\n            body: JSON.stringify({\n               password: this.state.password,\n               username: this.state.username\n            }),\n            headers: {\n               \"Content-Type\": \"application/json\"\n            }\n         })\n         .then(response => {\n            if (!response.ok) {\n               response.text().then((body) => {\n                  this.setState({\n                     errorRequest: body + \" Please enter different username.\"\n                  })\n               })\n               return;\n            }\n            this.props.login().then( () => {\n               this.props.history.push('/profile')\n            })\n         })\n         .catch(err => console.log(err));\n\n         this.setState({\n            username: \"\",\n            password: \"\",\n            passwordConfirm: \"\",\n            errorUsername: \"\",\n            errorPassword: \"\",\n            errorConfirm: \"\"\n         });\n      }\n   };\n\n   \n   render() {\n      return (\n         <form ref={this.form} autoComplete=\"off\" className=\"p-4\">\n            <div className=\"form-group\">\n               <label htmlFor=\"username\">Username</label>\n               <input className=\"form-control\"\n                  value={this.state.username}\n                  onChange={this.handleInputChange}\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  type=\"text\"\n               />\n               <p className=\"error\">{this.state.errorUsername}</p>\n               <label htmlFor=\"password\">Password (at least 6 characters long)</label>\n               <input className=\"form-control\"\n                  value={this.state.password}\n                  onChange={this.handleInputChange}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n               />\n               <p className=\"error\">{this.state.errorPassword}</p>\n               <label htmlFor=\"passwordConfirm\">Confirm Password</label>\n               <input className=\"form-control\"\n                  value={this.state.passwordConfirm}\n                  onChange={this.handleInputChange}\n                  name=\"passwordConfirm\"\n                  placeholder=\"Confirm password\"\n                  type=\"password\"\n               />\n               <p className=\"error\">{this.state.errorConfirm}</p>\n            </div>\n            {/* <div className=\"form-group\">\n              \n            </div>\n            <div className=\"form-group\">\n               \n            </div> */}\n            <p className=\"error\">{this.state.errorRequest}</p>\n            <button className=\"btn btn-primary\" onClick={this.handleFormSubmit}>\n               Sign Up\n            </button>\n         </form>\n      )\n   }\n};\nexport default CreateUser;\n\n"]},"metadata":{},"sourceType":"module"}