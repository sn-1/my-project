{"ast":null,"code":"import _classCallCheck from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sanjidanawrin/n3/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import UsernameForm from'../components/chat/UsernameForm';import ChatScreen from'../ChatScreen';var Chat=/*#__PURE__*/function(_Component){_inherits(Chat,_Component);function Chat(){var _this;_classCallCheck(this,Chat);_this=_possibleConstructorReturn(this,_getPrototypeOf(Chat).call(this));_this.state={currentUsername:'',currentScreen:'WhatIsYourUsernameScreen'};_this.onUsernameSubmitted=_this.onUsernameSubmitted.bind(_assertThisInitialized(_this));return _this;}_createClass(Chat,[{key:\"onUsernameSubmitted\",value:function onUsernameSubmitted(username){var _this2=this;fetch('/users',{method:'POST',mode:\"cors\",headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username})}).then(function(response){_this2.setState({currentUsername:username,currentScreen:'ChatScreen'});}).catch(function(error){return console.error('error',error);});}},{key:\"render\",value:function render(){if(this.state.currentScreen==='WhatIsYourUsernameScreen'){return React.createElement(UsernameForm,{onSubmit:this.onUsernameSubmitted});}if(this.state.currentScreen==='ChatScreen'){return React.createElement(ChatScreen,{currentUsername:this.state.currentUsername});}}}]);return Chat;}(Component);export default Chat;","map":{"version":3,"sources":["/Users/sanjidanawrin/n3/client/src/pages/Chat.js"],"names":["React","Component","UsernameForm","ChatScreen","Chat","state","currentUsername","currentScreen","onUsernameSubmitted","bind","username","fetch","method","mode","headers","body","JSON","stringify","then","response","setState","catch","error","console"],"mappings":"osBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,iCAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,C,GAEMC,CAAAA,I,8DACJ,eAAc,sCACZ,wEACA,MAAKC,KAAL,CAAa,CACXC,eAAe,CAAE,EADN,CAEXC,aAAa,CAAE,0BAFJ,CAAb,CAIA,MAAKC,mBAAL,CAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,+BAA3B,CANY,aAOb,C,iFAEmBC,Q,CAAU,iBAC5BC,KAAK,CAAC,QAAD,CAAW,CACdC,MAAM,CAAE,MADM,CAEdC,IAAI,CAAE,MAFQ,CAGdC,OAAO,CAAE,CACP,eAAgB,kBADT,CAHK,CAMdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEP,QAAQ,CAARA,QAAF,CAAf,CANQ,CAAX,CAAL,CAQGQ,IARH,CAQQ,SAAAC,QAAQ,CAAI,CAChB,MAAI,CAACC,QAAL,CAAc,CACZd,eAAe,CAAEI,QADL,CAEZH,aAAa,CAAE,YAFH,CAAd,EAID,CAbH,EAcGc,KAdH,CAcS,SAAAC,KAAK,QAAIC,CAAAA,OAAO,CAACD,KAAR,CAAc,OAAd,CAAuBA,KAAvB,CAAJ,EAdd,EAeD,C,uCAEQ,CACP,GAAI,KAAKjB,KAAL,CAAWE,aAAX,GAA6B,0BAAjC,CAA6D,CAC3D,MAAO,qBAAC,YAAD,EAAc,QAAQ,CAAE,KAAKC,mBAA7B,EAAP,CACD,CACD,GAAI,KAAKH,KAAL,CAAWE,aAAX,GAA6B,YAAjC,CAA+C,CAC7C,MAAO,qBAAC,UAAD,EAAY,eAAe,CAAE,KAAKF,KAAL,CAAWC,eAAxC,EAAP,CACD,CACF,C,kBAnCgBL,S,EAsCnB,cAAeG,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport UsernameForm from '../components/chat/UsernameForm';\nimport ChatScreen from '../ChatScreen';\n\nclass Chat extends Component {\n  constructor() {\n    super()\n    this.state = {\n      currentUsername: '',\n      currentScreen: 'WhatIsYourUsernameScreen'\n    }\n    this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n  }\n\n  onUsernameSubmitted(username) {\n    fetch('/users', {\n      method: 'POST',\n      mode: \"cors\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username }),\n    })\n      .then(response => {\n        this.setState({\n          currentUsername: username,\n          currentScreen: 'ChatScreen'\n        })\n      })\n      .catch(error => console.error('error', error))\n  }\n\n  render() {\n    if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n      return <UsernameForm onSubmit={this.onUsernameSubmitted} />\n    }\n    if (this.state.currentScreen === 'ChatScreen') {\n      return <ChatScreen currentUsername={this.state.currentUsername} />\n    }\n  }\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}