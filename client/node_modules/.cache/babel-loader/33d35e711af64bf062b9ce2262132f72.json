{"ast":null,"code":"var _jsxFileName = \"/Users/sanjidanawrin/n3/client/src/components/calendar/index.js\";\nimport React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport TripForm from \"components/FormModal\";\nimport TripCard from \"components/TripCard\";\nimport \"./main.scss\";\nimport axios from \"../../utils/API\";\nimport moment from \"moment-timezone\";\nexport default class DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      calendarWeekends: true,\n      eventSources: [],\n      id: \"\",\n      title: \"\",\n      location: \"\",\n      start: new Date(),\n      end: new Date(),\n      description: \"\",\n      showModal: false,\n      errorTitle: \"\",\n      errorLocation: \"\",\n      errorStart: \"\",\n      errorEnd: \"\",\n      errorDescription: \"\",\n      showCard: false,\n      users: [],\n      guests: []\n    };\n\n    this.handleEventClick = event => {\n      // get the trip's id from database\n      this.setState({\n        showCard: true\n      });\n      this.handleTrip(event.event.extendedProps._id);\n    };\n\n    this.handleDeleteClick = () => {\n      this.setState({\n        showCard: false\n      });\n      this.handleDeleteTrip(this.state.id);\n    };\n\n    this.handleUpdateClick = () => {\n      if (this.state.title && this.state.start && this.state.end && this.state.description) {\n        this.setState({\n          showCard: false\n        });\n        this.handleUpdateTrip(this.state.id);\n        this.setState({\n          errorTitle: \"\",\n          errorLocation: \"\",\n          errorStart: \"\",\n          errorEnd: \"\",\n          errorDescription: \"\"\n        });\n      } else {\n        this.setState({\n          errorTitle: \"*Please enter your trip name\",\n          errorLocation: \"*Please enter your trip location\",\n          errorStart: \"*Please enter the start date\",\n          errorEnd: \"*Please enter the end date\",\n          errorDescription: \"*Please enter the description\"\n        });\n      }\n    };\n\n    this.handleTrip = id => {\n      axios.getOneTrip(id).then(res => {\n        const dateStart = res.data.start;\n        const start = moment(dateStart).tz(\"UTC\").format('YYYY-MM-DD');\n        const dateEnd = res.data.end;\n        const end = moment(dateEnd).tz(\"UTC\").format('YYYY-MM-DD');\n        this.setState({\n          id: res.data._id,\n          title: res.data.title,\n          location: res.data.location,\n          start: start,\n          end: end,\n          description: res.data.description,\n          guests: res.data.guests\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleDeleteTrip = id => {\n      axios.deleteTrip(id).then(() => {\n        this.refreshTrips();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleUpdateTrip = id => {\n      // console.log(this.state);\n      axios.update(id, this.state).then(res => {\n        this.refreshTrips();\n      }).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      // Getting the value and name of the input which triggered the change\n      let value = event.target.value;\n      const name = event.target.name; // Updating the input's state\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n    };\n\n    this.handleCloseClick = () => {\n      this.setState({\n        showModal: false,\n        showCard: false,\n        errorTitle: \"\",\n        errorStart: \"\",\n        errorLocation: \"\",\n        errorEnd: \"\",\n        errorDescription: \"\"\n      });\n    };\n\n    this.handleDateClick = () => {\n      this.setState({\n        // startDate: new Date(arg.date),\n        showModal: true,\n        title: \"\",\n        location: \"\",\n        start: new Date().getUTCHours(),\n        end: new Date().getUTCHours(),\n        description: \"\"\n      });\n    };\n\n    this.handleGuestsChange = event => {\n      //Can't do filter and map on HTMLCollections\n      let asArr = Array.prototype.slice.call(event.target.options);\n      let guestIds = asArr.filter(option => option.selected).map(option => option.value);\n      this.setState({\n        guests: guestIds\n      });\n    };\n\n    this.handleSaveTrip = () => {\n      if (this.state.title && this.state.start && this.state.end && this.state.description) {\n        axios.saveTrip(this.state).then(() => {\n          this.refreshTrips();\n          this.setState({\n            showModal: false\n          });\n        }).catch(err => console.log(err));\n        this.setState({\n          title: \"\",\n          location: \"\",\n          start: new Date().getUTCHours(),\n          end: new Date().getUTCHours(),\n          description: \"\",\n          errorTitle: \"\",\n          errorLocation: \"\",\n          errorStart: \"\",\n          errorEnd: \"\",\n          errorDescription: \"\",\n          guests: []\n        });\n      } else {\n        this.setState({\n          errorTitle: \"*Please enter your trip name\",\n          errorLocation: \"*Please enter your trip location\",\n          errorStart: \"*Please enter the start date\",\n          errorEnd: \"*Please enter the end date\",\n          errorDescription: \"*Please enter the description\"\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.refreshTrips();\n    this.getAllUsers();\n  } // get all users for guests list\n\n\n  getAllUsers() {\n    axios.getAllUsers().then(resp => {\n      this.setState({\n        users: resp.data\n      });\n    });\n  } // display trip on calendar\n\n\n  refreshTrips() {\n    axios.getTrips().then(resp => {\n      this.setState({\n        eventSources: resp.data[0].trip.map(e => {\n          let start = moment(e.start).tz('UTC').format('YYYY-MM-DD');\n          let end = moment(e.end).tz('UTC').add(1, 'days').format('YYYY-MM-DD');\n          return { ...e,\n            start: start,\n            end: end\n          };\n        })\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"demo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(TripForm, Object.assign({\n      show: this.state.showModal\n    }, this.state, {\n      close: this.handleCloseClick,\n      save: this.handleSaveTrip,\n      handleInputChange: this.handleInputChange,\n      handleGuestsChange: this.handleGuestsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })), React.createElement(TripCard, Object.assign({\n      show: this.state.showCard\n    }, this.state, {\n      close: this.handleCloseClick,\n      delete: this.handleDeleteClick,\n      save: this.handleUpdateClick,\n      handleInputChange: this.handleInputChange,\n      handleGuestsChange: this.handleGuestsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"demo-app-top mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.toggleWeekends,\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"toggle weekends\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: this.gotoPast,\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"go to a date in the past\"), \"\\xA0 (also, click a date/time to add an event)\"), React.createElement(\"div\", {\n      className: \"demo-app-calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n      },\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.eventSources,\n      dateClick: this.handleDateClick,\n      eventClick: this.handleEventClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/sanjidanawrin/n3/client/src/components/calendar/index.js"],"names":["React","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","TripForm","TripCard","axios","moment","DemoApp","Component","calendarComponentRef","createRef","state","calendarWeekends","eventSources","id","title","location","start","Date","end","description","showModal","errorTitle","errorLocation","errorStart","errorEnd","errorDescription","showCard","users","guests","handleEventClick","event","setState","handleTrip","extendedProps","_id","handleDeleteClick","handleDeleteTrip","handleUpdateClick","handleUpdateTrip","getOneTrip","then","res","dateStart","data","tz","format","dateEnd","catch","err","console","log","deleteTrip","refreshTrips","update","handleInputChange","value","target","name","toggleWeekends","gotoPast","calendarApi","current","getApi","gotoDate","handleCloseClick","handleDateClick","getUTCHours","handleGuestsChange","asArr","Array","prototype","slice","call","options","guestIds","filter","option","selected","map","handleSaveTrip","saveTrip","componentDidMount","getAllUsers","resp","getTrips","trip","e","add","render","left","center","right"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport TripForm from \"components/FormModal\";\nimport TripCard from \"components/TripCard\";\nimport \"./main.scss\";\nimport axios from \"../../utils/API\";\nimport moment from \"moment-timezone\";\n\nexport default class DemoApp extends React.Component {\n  componentDidMount() {\n    this.refreshTrips();\n    this.getAllUsers();\n  }\n\n  // get all users for guests list\n  getAllUsers() {\n    axios.getAllUsers().then(resp => {\n      this.setState({\n        users: resp.data\n      });\n    });\n  }\n\n  // display trip on calendar\n  refreshTrips() {\n    axios.getTrips().then(resp => {\n      this.setState(\n        {\n          eventSources: resp.data[0].trip.map(e => {\n            let start = moment(e.start).tz('UTC').format('YYYY-MM-DD');\n            let end = moment(e.end).tz('UTC').add(1, 'days').format('YYYY-MM-DD');\n            return {\n              ...e,\n              start: start,\n              end: end\n            };\n          })\n        });\n    });\n  }\n\n  calendarComponentRef = React.createRef();\n  state = {\n    calendarWeekends: true,\n    eventSources: [],\n    id: \"\",\n    title: \"\",\n    location: \"\",\n    start: new Date(),\n    end: new Date(),\n    description: \"\",\n    showModal: false,\n    errorTitle: \"\",\n    errorLocation: \"\",\n    errorStart: \"\",\n    errorEnd: \"\",\n    errorDescription: \"\",\n    showCard: false,\n    users: [],\n    guests: []    \n  }\n\n  // show trip card\n  handleEventClick = (event) => {\n    // get the trip's id from database\n    this.setState({\n      showCard: true\n    })\n    this.handleTrip(event.event.extendedProps._id)\n  }\n\n  // trip's delete button\n  handleDeleteClick = () => {\n    this.setState({\n      showCard: false\n    })\n    this.handleDeleteTrip(this.state.id)\n  }\n\n  // trip's save changes button\n  handleUpdateClick = () => {\n    if (\n      this.state.title &&\n      this.state.start &&\n      this.state.end &&\n      this.state.description\n      ) {\n        this.setState({\n          showCard: false\n        })\n        this.handleUpdateTrip(this.state.id)\n        this.setState({\n          errorTitle: \"\",\n          errorLocation: \"\",\n          errorStart: \"\",\n          errorEnd: \"\",\n          errorDescription: \"\",\n        })\n      } else {\n        this.setState({\n          errorTitle: \"*Please enter your trip name\",\n          errorLocation: \"*Please enter your trip location\",\n          errorStart: \"*Please enter the start date\",\n          errorEnd: \"*Please enter the end date\",\n          errorDescription: \"*Please enter the description\"\n        });\n      }\n  };\n\n  // get trip's data from database\n  handleTrip = (id) => {\n    axios.getOneTrip(id)\n    .then(res => {\n      const dateStart = res.data.start;\n      const start = moment(dateStart).tz(\"UTC\").format('YYYY-MM-DD');\n      const dateEnd = res.data.end;\n      const end = moment(dateEnd).tz(\"UTC\").format('YYYY-MM-DD');\n      this.setState({\n        id: res.data._id,\n        title: res.data.title,\n        location: res.data.location,\n        start: start,\n        end: end,\n        description: res.data.description,\n        guests: res.data.guests\n      })\n    })\n    .catch(err => console.log(err));\n  }\n\n  // delete a trip\n  handleDeleteTrip = (id) => {\n    axios.deleteTrip(id)\n    .then(() => {\n      this.refreshTrips();\n    })\n  .catch(err => console.log(err));\n\n  }\n\n  // update a trip\n  handleUpdateTrip = (id) => {\n    // console.log(this.state);\n    axios.update(id, this.state)\n    .then(res => {\n      this.refreshTrips();\n    })\n    .catch(err => console.log(err));\n  }\n \n  handleInputChange = event => {\n    // Getting the value and name of the input which triggered the change\n    let value = event.target.value;\n    const name = event.target.name;\n    // Updating the input's state\n    this.setState({\n      [name]: value\n    });\n  };\n\n  toggleWeekends = () => {\n    this.setState({\n      // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    });\n  };\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi();\n    calendarApi.gotoDate(\"2000-01-01\"); // call a method on the Calendar object\n  };\n\n  // close modal and clear input\n  handleCloseClick = () => {\n    this.setState({\n      showModal: false,\n      showCard: false,\n      errorTitle: \"\",\n      errorStart: \"\",\n      errorLocation: \"\",\n      errorEnd: \"\",\n      errorDescription: \"\"\n    });\n  };\n\n  // click calendar\n  handleDateClick = () => {\n    this.setState({\n      // startDate: new Date(arg.date),\n      showModal: true,\n      title: \"\",\n      location:\"\",\n      start: new Date().getUTCHours(),\n      end: new Date().getUTCHours(),\n      description: \"\"\n    })\n  };\n\n  // guests list\n  handleGuestsChange = (event) => {\n    //Can't do filter and map on HTMLCollections\n    let asArr = Array.prototype.slice.call(event.target.options);\n    let guestIds = asArr\n      .filter(option => option.selected)\n      .map(option => option.value);\n\n    this.setState({\n      guests: guestIds\n    })\n  }\n\n  // save a new trip\n  handleSaveTrip = () => {\n    if (\n      this.state.title &&\n      this.state.start &&\n      this.state.end &&\n      this.state.description\n    ) {\n      axios\n        .saveTrip(this.state)\n        .then(() => {\n          this.refreshTrips();\n          this.setState({\n            showModal: false\n          });\n        })\n        .catch(err => console.log(err));\n      this.setState({\n        title: \"\",\n        location:\"\",\n        start: new Date().getUTCHours(),\n        end: new Date().getUTCHours(),\n        description: \"\",\n        errorTitle: \"\",\n        errorLocation: \"\",\n        errorStart: \"\",\n        errorEnd: \"\",\n        errorDescription: \"\",\n        guests: [],\n      });\n    } else {\n      this.setState({\n        errorTitle: \"*Please enter your trip name\",\n        errorLocation: \"*Please enter your trip location\",\n        errorStart: \"*Please enter the start date\",\n        errorEnd: \"*Please enter the end date\",\n        errorDescription: \"*Please enter the description\"\n      });\n    }\n  };\n  render() {\n    return (\n      <div className='demo-app'>\n        <TripForm show={this.state.showModal}\n        {...this.state}\n        close={this.handleCloseClick} \n        save={this.handleSaveTrip}  \n        handleInputChange={this.handleInputChange}\n        handleGuestsChange={this.handleGuestsChange} />\n        <TripCard show={this.state.showCard}\n        {...this.state}\n        close={this.handleCloseClick}\n        delete={this.handleDeleteClick}\n        save={this.handleUpdateClick}\n        handleInputChange={this.handleInputChange}\n        handleGuestsChange={this.handleGuestsChange} />\n        <div className='demo-app-top mb-4'>\n          <button onClick={this.toggleWeekends} className=\"btn btn-dark\">toggle weekends</button>&nbsp;\n          <button onClick={this.gotoPast} className=\"btn btn-dark\">go to a date in the past</button>&nbsp;\n          (also, click a date/time to add an event)\n        </div>\n        <div className=\"demo-app-calendar\">\n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n            }}\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={this.state.eventSources}\n            dateClick={this.handleDateClick}\n            eventClick={this.handleEventClick}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}